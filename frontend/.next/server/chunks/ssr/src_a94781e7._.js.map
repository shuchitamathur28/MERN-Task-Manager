{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/SHUCHI/learn_react/task-manager/frontend/src/components/TaskList.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTasks } from \"../redux/taskSlice\";\r\nimport { AppDispatch, RootState } from \"../redux/store\";\r\n\r\nconst TaskList = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { tasks, loading, error } = useSelector((state: RootState) => state.tasks);\r\n  const [client, setClient] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setClient(true);\r\n    dispatch(fetchTasks());\r\n  }, [dispatch]);\r\n\r\n  if (!client) return null;\r\n\r\n  if (loading) return <p>Loading tasks...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-3\">Task List</h2>\r\n      <table className=\"table table-bordered table-striped\">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Task</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task, index) => (\r\n            <tr key={task._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{task.text}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAOA,MAAM,WAAW;IACf,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,KAAK;IAC/E,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,UAAU;QACV,SAAS,CAAA,GAAA,yHAAA,CAAA,aAAU,AAAD;IACpB,GAAG;QAAC;KAAS;IAEb,IAAI,CAAC,QAAQ,OAAO;IAEpB,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IACvB,IAAI,OAAO,qBAAO,8OAAC;;YAAE;YAAQ;;;;;;;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAO;;;;;;0BACrB,8OAAC;gBAAM,WAAU;;kCACf,8OAAC;wBAAM,WAAU;kCACf,cAAA,8OAAC;;8CACC,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;;;;;;;;;;;;kCAGR,8OAAC;kCACE,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;;kDACC,8OAAC;kDAAI,QAAQ;;;;;;kDACb,8OAAC;kDAAI,KAAK,IAAI;;;;;;;+BAFP,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;AAS7B;uCAEe","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file://G%3A/SHUCHI/learn_react/task-manager/frontend/src/components/TaskForm.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../redux/taskSlice\";\r\nimport { AppDispatch } from \"../redux/store\";\r\n\r\nconst TaskForm = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (text.trim() !== \"\") {\r\n      dispatch(addTask(text));\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Enter a new task\"\r\n      />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAGA,MAAM,WAAW;IACf,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,KAAK,IAAI,OAAO,IAAI;YACtB,SAAS,CAAA,GAAA,yHAAA,CAAA,UAAO,AAAD,EAAE;YACjB,QAAQ;QACV;IACF;IAEA,qBACE,8OAAC;QAAK,UAAU;;0BACd,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gBACvC,aAAY;;;;;;0BAEd,8OAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAG5B;uCAEe","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file://G%3A/SHUCHI/learn_react/task-manager/frontend/src/components/Navbar.tsx"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Navbar extends Component {\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\"><h1>Task Manager</h1></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Register</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Login</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n"],"names":[],"mappings":";;;;;AAAA;;;AAEO,MAAM,eAAe,qMAAA,CAAA,YAAS;IACnC,SAAS;QACP,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;wBAAe,MAAK;kCAAI,cAAA,8OAAC;sCAAG;;;;;;;;;;;kCACzC,8OAAC;wBAAO,WAAU;wBAAiB,MAAK;wBAAS,kBAAe;wBAAW,kBAAe;wBAA0B,iBAAc;wBAAyB,iBAAc;wBAAQ,cAAW;kCACxL,cAAA,8OAAC;4BAAK,WAAU;;;;;;;;;;;kCAEpB,8OAAC;wBAAI,WAAU;wBAA2B,IAAG;kCACzC,cAAA,8OAAC;4BAAG,WAAU;;8CACV,8OAAC;oCAAG,WAAU;8CACV,cAAA,8OAAC;wCAAE,WAAU;wCAAkB,gBAAa;wCAAO,MAAK;kDAAI;;;;;;;;;;;8CAEhE,8OAAC;oCAAG,WAAU;8CACV,cAAA,8OAAC;wCAAE,WAAU;wCAAW,MAAK;kDAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAW3D;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file://G%3A/SHUCHI/learn_react/task-manager/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\"; // Required for client components\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTask, fetchTasks } from \"../redux/taskSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport TaskList from \"@/components/TaskList\";\nimport TaskForm from \"@/components/TaskForm\";\nimport { Suspense } from \"react\";\nimport Navbar from \"@/components/Navbar\";\nimport Home from \"@/components/Home\";\n\nexport default function Home() {\n  return (\n    <main>\n      <Navbar></Navbar>\n      <Home></Home>\n      <TaskForm />\n      <Suspense fallback={<p>Loading tasks...</p>}>\n        <TaskList />\n      </Suspense>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAMA;AACA;AACA;AACA;AATA,cAAc,iCAAiC;;;;;;AAYhC,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC,4HAAA,CAAA,UAAM;;;;;0BACP,8OAAC;;;;;0BACD,8OAAC,8HAAA,CAAA,UAAQ;;;;;0BACT,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;8BAAE;;;;;;0BACrB,cAAA,8OAAC,8HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;;AAIjB","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}